name: C++ CI Workflow with conda-forge dependencies

on:
  push:
  pull_request:
  schedule:
  # * is a special character in YAML so you have to quote this string
  # Execute a "weekly" build at 2 AM UTC on Sunday
  - cron:  '0 2 * * 0'

jobs:
  build:
    name: '[${{ matrix.os }}@${{ matrix.build_type }}@conda]'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build_type: [Release]
        os: [ubuntu-latest, windows-2019, macOS-latest]
      fail-fast: false

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        mamba-version: "*"
        channels: conda-forge,defaults
        miniforge-variant: Mambaforge
        channel-priority: true

    - name: Dependencies
      shell: bash -l {0}
      run: |
        mamba install cmake compilers make ninja pkg-config ycm-cmake-modules

    - name: Additional Dependencies [Windows]
      if: contains(matrix.os, 'windows')
      shell: bash -l {0}
      run: |
        mamba install vs2019_win-64


    - name: Configure&Build&Test&Install [Linux&macOS]
      if: contains(matrix.os, 'macos') || contains(matrix.os, 'ubuntu')
      shell: bash -l {0}
      run: |
        mkdir -p build
        cd build
        cmake -GNinja -DBUILD_TESTING:BOOL=ON -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_INSTALL_PREFIX=./install ..
        cmake --build . --config ${{ matrix.build_type }}
        ctest --output-on-failure -C ${{ matrix.build_type }}
        cmake --install . --config ${{ matrix.build_type }}

    - name: Configure&Build&Test&Install [Windows]
      if: contains(matrix.os, 'windows')
      shell: cmd /C CALL {0}
      run: |
        mkdir build
        cd build
        cmake -GNinja -DBUILD_TESTING:BOOL=ON -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_INSTALL_PREFIX=./install ..
        cmake --build . --config ${{ matrix.build_type }}
        ctest --output-on-failure -C ${{ matrix.build_type }}
        cmake --install . --config ${{ matrix.build_type }}
