# SPDX-FileCopyrightText: Fondazione Istituto Italiano di Tecnologia (IIT)
# SPDX-License-Identifier: BSD-3-Clause

# reloc_cpp_generate(<package>
#                    [INSTALL_COMPONENT <install_component>]
#                    [INSTALL_VARS_PREFIX <install_vars_prefix>])
#
function(YARP_CONFIGURE_PLUGINS_INSTALLATION _package)
  set(_options)
  set(_oneValueArgs
    INSTALL_COMPONENT
    INSTALL_VARS_PREFIX
  )
  set(_multiValueArgs )
  cmake_parse_arguments(YCPI "${_options}" "${_oneValueArgs}" "${_multiValueArgs}" ${ARGN} )

  if(NOT DEFINED YCPI_INSTALL_COMPONENT)
    set(YCPI_INSTALL_COMPONENT configuration)
  endif()

  if(NOT DEFINED YCPI_INSTALL_VARS_PREFIX)
    set(YCPI_INSTALL_VARS_PREFIX YARP)
  endif()

  cmake_dependent_option(
    YARP_FORCE_DYNAMIC_PLUGINS "Force YARP to create dynamically loaded plugins even if building static libraries." OFF
    "NOT BUILD_SHARED_LIBS" OFF)
  mark_as_advanced(YARP_FORCE_DYNAMIC_PLUGINS)

  set(_in_file "${CMAKE_BINARY_DIR}/CMakeFiles/${_package}.ini.in")
  set(_build_file "${CMAKE_BINARY_DIR}/${${YCPI_INSTALL_VARS_PREFIX}_PLUGIN_MANIFESTS_INSTALL_DIR}/${_package}.ini")
  set(_install_file "${CMAKE_BINARY_DIR}/CMakeFiles/${_package}_for_install.ini")
  set(_destination "${${YCPI_INSTALL_VARS_PREFIX}_PLUGIN_MANIFESTS_INSTALL_DIR}")

  unset(_path)
  unset(_extension)
  unset(_type)
  file(WRITE "${_in_file}"
"###### This file is automatically generated by CMake.
[search ${_package}]
path \"@_path@\"
extension \"@_extension@\"
type \"@_type@\"
")

  if(YARP_FORCE_DYNAMIC_PLUGINS OR BUILD_SHARED_LIBS)
    set(_extension "${CMAKE_SHARED_MODULE_SUFFIX}")
    set(_type "shared")
  else()
    set(_extension "${CMAKE_STATIC_LIBRARY_SUFFIX}")
    set(_type "static")
  endif()

  set(_path "${CMAKE_BINARY_DIR}/${${YCPI_INSTALL_VARS_PREFIX}_DYNAMIC_PLUGINS_INSTALL_DIR}") # (build tree)
  configure_file("${_in_file}" "${_build_file}" @ONLY)

  set(_path "${CMAKE_INSTALL_PREFIX}/${${YCPI_INSTALL_VARS_PREFIX}_DYNAMIC_PLUGINS_INSTALL_DIR}") # (install tree)
  configure_file("${_in_file}" "${_install_file}" @ONLY)
  install(FILES "${_install_file}"
          RENAME ${_package}.ini
          COMPONENT "${YCPI_INSTALL_COMPONENT}"
          DESTINATION "${_destination}")
endfunction()
